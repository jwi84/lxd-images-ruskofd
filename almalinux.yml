---
image:
  distribution: almalinux
  release: 8
  architecture: x86_64
  name: "{{ image.distribution }}-{{ image.release }}-{{ image.variant }}-{{ image.serial }}"
  description: "AlmaLinux {{ image.release }} ({{ image.variant }}-{{ image.serial }})"
  variant: default

source:
  downloader: almalinux-http
  url: https://repo.almalinux.org/almalinux/
  variant: boot

targets:
  lxd:
    vm:
      filesystem: ext4
      size: 34359738368 # 32 GiB

packages:
  manager: dnf
  update: true
  cleanup: true
  sets:
  - packages:
    - bash-completion
    - dnf-plugins-core
    - epel-release
    - glibc-langpack-en
    - glibc-locale-source
    - hostname
    - iproute
    - iputils
    - less
    - lsof
    - NetworkManager
    - nmap-ncat
    - passwd
    - rootfiles
    - strace
    - tar
    - unzip
    - vim-minimal
    - wget
    action: install
    variants:
    - default
    - cloud

  - packages:
    - cloud-init
    - openssh-clients
    - openssh-server
    - sudo
    action: install
    variants:
    - cloud

  - packages:
    - chrony
    - grub2-efi-x64
    - kernel
    - nftables
    - shim
    action: install
    variants:
    - default
    - cloud
    types:
    - vm
  
  - packages:
    - cloud-utils-growpart
    action: install
    variants:
    - cloud
    types:
    - vm

  - packages:
    - linux-firmware
    - mdadm
    - udisks2
    action: remove
    variants:
    - default
    - cloud
    types:
    - vm

actions:
  # Generate machine-id in order for the kernel stuff to be configured properly
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      systemd-machine-id-setup
    types:
    - vm

  # Configure timezone
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      ln -sfn /usr/share/zoneinfo/Europe/Paris /etc/localtime
      echo "Europe/Paris" > /etc/timezone

  # Configure locale 
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      # Set default locale
      localedef -i en_US -f UTF-8 en_US.UTF-8
      echo 'LANG=en_US.utf8' > /etc/locale.conf

  # Enable extra repos (EPEL)
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      dnf config-manager --set-enabled powertools
    releases:
    - 8

  # Enable extra repos (EPEL)
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      dnf config-manager --set-enabled crb
    releases:
    - 9

  # Default systemd units to enable
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      systemctl enable NetworkManager

  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      systemctl enable sshd cloud-init cloud-init-local cloud-config cloud-final
    variants:
    - cloud

  # Additionnal units to manage for VMs
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      systemctl enable chronyd nftables
    types:
    - vm

  # Fix symlink for Python on EL 8
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      ln -sf /usr/libexec/platform-python3.6 /usr/libexec/platform-python
    releases:
    - 8

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux
      # Generate GRUB config
      target="$(readlink -f /etc/grub2-efi.cfg)"
      grub2-mkconfig -o "${target}"
      sed -i "s#root=[^ ]*#root=/dev/sda2#g" "${target}"
      sed -ri 's|/rootfs||g' /boot/loader/entries/*
      # Regenerate initramfs
      kver=$(ls /boot/initramfs-*.img | sed -r 's#.*initramfs-(.+)\.img#\1#')
      dracut --kver "${kver}" -f
    types:
    - vm
    releases:
    - 8

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux
      # Generate GRUB config
      sed -ri 's#^options .+#options $kernelopts#g' /boot/loader/entries/*
      target=/boot/efi/EFI/almalinux/grub.cfg
      grub2-mkconfig -o "${target}"
      sed -i "s#root=[^ ]*#root=/dev/sda2#g" "${target}"
      sed -ri 's|/rootfs||g' /boot/loader/entries/*
      # Regenerate initramfs
      kver=$(ls /boot/initramfs-*.img | sed -r 's#.*initramfs-(.+)\.img#\1#')
      dracut --kver "${kver}" -f
    types:
    - vm
    releases:
    - 9

files:
  - name: fstab
    generator: fstab
    types:
    - vm

  - path: /etc/fstab
    generator: dump
    types:
    - container

  - path: /etc/machine-id
    generator: dump
  
  - path: /var/lib/dbus/machine-id
    generator: remove
  
  - path: /etc/hostname
    generator: hostname
  
  - path: /etc/hosts
    generator: hosts

  - name: lxd-agent
    generator: lxd-agent
    types:
    - vm

  - name: meta-data
    generator: cloud-init
    variants:
    - cloud

  - name: user-data
    generator: cloud-init
    variants:
    - cloud

  - name: vendor-data
    generator: cloud-init
    variants:
    - cloud

  - name: network-config
    generator: cloud-init
    content: |-
      {% if config_get("user.network-config", "") == "" %}version: 1
      config:
        - type: physical
          name: {% if instance.type == "virtual-machine" %}enp5s0{% else %}eth0{% endif %}
          subnets:
            - type: {% if config_get("user.network_mode", "") == "link-local" %}manual{% else %}dhcp{% endif %}
              control: auto
            - type: dhcp6
              control: auto{% else %}{{ config_get("user.network-config", "") }}{% endif %}
    variants:
    - cloud

  - path: /etc/default/grub
    generator: dump
    content: |-
      # Set the recordfail timeout
      GRUB_RECORDFAIL_TIMEOUT=0
      # Do not wait on grub prompt
      GRUB_TIMEOUT=0
      # Set the default commandline
      GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} console=tty1 console=ttyS0 systemd.unified_cgroup_hierarchy=1 psi=1"
      # Set the grub console type
      GRUB_TERMINAL=console
      # Disable os-prober
      GRUB_DISABLE_OS_PROBER=true
    types:
    - vm
    releases:
    - 8

  - path: /etc/dracut.conf.d/lxd.conf
    generator: dump
    content: |-
      add_drivers+=" virtio_scsi virtio_console sd_mod "
    types:
    - vm

  - path: /etc/default/grub
    generator: dump
    content: |-
      # Set the recordfail timeout
      GRUB_RECORDFAIL_TIMEOUT=0
      # Do not wait on grub prompt
      GRUB_TIMEOUT=0
      # Set the default commandline
      GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} console=tty1 console=ttyS0 psi=1"
      # Set the grub console type
      GRUB_TERMINAL=console
      # Disable os-prober
      GRUB_DISABLE_OS_PROBER=true
    types:
    - vm
    releases:
    - 9

  # Blacklist IPMI module since it's loaded in VM and therefore the module-load systemd service crash
  # Link: https://bugzilla.redhat.com/show_bug.cgi?id=2037294  
  - path: /etc/modprobe.d/blacklist-ipmi.conf
    generator: dump
    content: |-
      blacklist ipmi_si
    types:
    - vm
    releases:
    - 8

  - name: 86-nm-unmanaged.rules
    path: /etc/udev/rules.d/86-nm-unmanaged.rules
    generator: dump
    content: |-
      ENV{ID_NET_DRIVER}=="veth", ENV{NM_UNMANAGED}="0"
    types:
    - container

  - path: /etc/udev/rules.d/80-iosched.rules
    source: config/udev/80-iosched.rules
    generator: copy
    types:
    - vm

  - path: /etc/udev/rules.d/80-cpu-hotplug.rules
    source: config/udev/80-cpu-hotplug.rules
    generator: copy
    types:
    - vm

  - path: /etc/systemd/journald.conf
    source: config/systemd-journald/journald.conf
    generator: copy

  - path: /etc/chrony.conf
    source: config/chrony/chrony.conf
    generator: copy
 
  - path: /etc/dnf/dnf.conf
    source: config/dnf/dnf.conf
    generator: copy
  
  - path: /etc/ssh/sshd_config
    source: config/ssh/sshd_config
    generator: copy
    variants:
    - cloud

  - path: /etc/cloud/cloud.cfg
    source: config/cloud-init/rhel.cfg
    generator: copy
    variants:
    - cloud

